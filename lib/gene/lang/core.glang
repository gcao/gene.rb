(class File
)

# Wrapper class for native arrays
(class Array
  (method class _
    ($invoke $context "get" "Array")
  )
  (method size _
    ($invoke self "size")
  )
  (method get i
    (if (i >= (.size))
      undefined
      ($invoke self [] i)
    )
  )
  (method each f
    (for (let i 0) (i < (.size)) (let i (i + 1))
      (let item (.get i))
      (f item i)
    )
  )
  (method select f
    (def result [])
    (for (let i 0) (i < (.size)) (let i (i + 1))
      (let item (.get i))
      (if (f item))
    )
    result
  )
  (method flatten _
    (def result [])
    (.each
      (fnx item
        (if (($invoke ($invoke item 'class') 'name') == 'Array')
          (do
            (let child-array (item .flatten))
            (child-array .each
              (fnx item ($invoke result '<<' item))
            )
          )
          ($invoke result '<<' item)
        )
      )
    )
    result
  )
)

(class Hash
  (method size _
    ($invoke self "size")
  )
)

(class String
  (method + args...
    ($invoke $self '<<' args)
  )
)