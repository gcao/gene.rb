(ns global/gene
  (class Object
  )

  (class File
    (fn read file
      (gene_file_read file)
    )

    (fn read_lines [file callback]
      (gene_file_read_lines file)
    )

    (fn write [file content]
      (gene_file_write file content)
    )
  )

  (class String
    (method length _
      (gene_invoke self 'length')
    )

    (method substr [start end]
      (if (! end) (end = ((.length) - start)))
      (gene_invoke self '[]' start end)
    )

    (method split sep
      (gene_invoke self 'split' sep)
    )
  )

  (class Array
    (method length _
      (gene_invoke self 'length')
    )

    (method get i
      (gene_invoke self '[]' i)
    )

    (method each f
      (for (var i 0) (i < (.length)) (i += 1)
        (f (.get i))
      )
    )
  )

  (class Hash
    (method size _
      (gene_invoke self 'size')
    )

    (method get key
      (gene_invoke self '[]' key)
    )

    (method each f
      (var keys (gene_invoke self 'keys'))
      (for (var i 0) (i < (.size)) (i += 1)
        (var key (keys .get i))
        (var val (.get key))
        (f key val)
      )
    )
  )

  (fn Env name
    (gene_env_get name)
  )

  (fn Env/set [name value]
    (gene_env_set name value)
  )

  (ns net
    (class HttpServer
      # See https://practicingruby.com/articles/implementing-an-http-file-server

      (init port
        (@port = port)
        (@mappings = [])
      )

      (method serve_static [url path]
        (@mappings .push {^url url ^path path})
      )

      (method start _
        (var server (gene_invoke (gene_get_class "TCPServer") "new" "localhost" @port))
        (loop
          (var socket (gene_invoke server "accept"))
          (var req (gene_invoke socket "gets"))
          (var resp "Hello world!")
          (gene_invoke socket "print"
            (
              "HTTP/1.1 200 OK\r\n"
              "Content-Type: text/plain\r\n"
              "Content-Length: " (gene_invoke resp "bytesize") "\r\n"
              "Connection: close\r\n"
              "\r\n"
              resp
            )
          )
          (gene_invoke socket "close")
        )
      )
    )
  )
)

undefined