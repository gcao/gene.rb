(fn compile code...
  ^^global

  # Empty code becomes [Stream] for some reason
  (if ((code .get 0) .is Stream)
    (code = (code .get 0))
  )
  (gene2js_
    ^^#render_args
    (var $root_context ($application . (create_root_context <-)))
    ((fnx $context
      (var $result)
      (%expand
        (code .map (fnx item
          (:$result = (%compile_ item))
        ))
      )
      (return $result)
    ) <- $root_context)
  )
)

(fn gene2js_ code...
  ^!eval_arguments

  (gene2js
    code...
  )
)

(fn compile_ data
  (if (data .is Object)
    (if ((data .type) == :var)
      (compile_var data)
    )
  )
)

(fn compile_var data
  (::
    (($context . var_) <-
      (%% ((data .get 0) .to_s))
      (%data .get 1)
    )
  )
)
